{"ast":null,"code":"import { createElement, forwardRef as forwardRefReact } from 'react';\nimport { useTranslation } from './useTranslation.js';\nimport { getDisplayName } from './utils.js';\nexport function withTranslation(ns) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t, i18n, ready] = useTranslation(ns, { ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = { ...rest,\n        t,\n        i18n,\n        tReady: ready\n      };\n\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n\n      return createElement(WrappedComponent, passDownProps);\n    }\n\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n\n    const forwardRef = (props, ref) => createElement(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n\n    return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;\n  };\n}","map":{"version":3,"sources":["C:/Users/HP14EC0101NW/OneDrive/Рабочий стол/clone/Portfolio/node_modules/react-i18next/dist/es/withTranslation.js"],"names":["createElement","forwardRef","forwardRefReact","useTranslation","getDisplayName","withTranslation","ns","options","arguments","length","undefined","Extend","WrappedComponent","I18nextWithTranslation","_ref","forwardedRef","rest","t","i18n","ready","keyPrefix","passDownProps","tReady","withRef","ref","displayName","props","Object","assign"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAU,IAAIC,eAAtC,QAA6D,OAA7D;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAClC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAO,SAASG,MAAT,CAAgBC,gBAAhB,EAAkC;AACvC,aAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC,UAAI;AACFC,QAAAA,YADE;AAEF,WAAGC;AAFD,UAGAF,IAHJ;AAIA,YAAM,CAACG,CAAD,EAAIC,IAAJ,EAAUC,KAAV,IAAmBhB,cAAc,CAACG,EAAD,EAAK,EAC1C,GAAGU,IADuC;AAE1CI,QAAAA,SAAS,EAAEb,OAAO,CAACa;AAFuB,OAAL,CAAvC;AAIA,YAAMC,aAAa,GAAG,EACpB,GAAGL,IADiB;AAEpBC,QAAAA,CAFoB;AAGpBC,QAAAA,IAHoB;AAIpBI,QAAAA,MAAM,EAAEH;AAJY,OAAtB;;AAMA,UAAIZ,OAAO,CAACgB,OAAR,IAAmBR,YAAvB,EAAqC;AACnCM,QAAAA,aAAa,CAACG,GAAd,GAAoBT,YAApB;AACD,OAFD,MAEO,IAAI,CAACR,OAAO,CAACgB,OAAT,IAAoBR,YAAxB,EAAsC;AAC3CM,QAAAA,aAAa,CAACN,YAAd,GAA6BA,YAA7B;AACD;;AACD,aAAOf,aAAa,CAACY,gBAAD,EAAmBS,aAAnB,CAApB;AACD;;AACDR,IAAAA,sBAAsB,CAACY,WAAvB,GAAsC,0BAAyBrB,cAAc,CAACQ,gBAAD,CAAmB,GAAhG;AACAC,IAAAA,sBAAsB,CAACD,gBAAvB,GAA0CA,gBAA1C;;AACA,UAAMX,UAAU,GAAG,CAACyB,KAAD,EAAQF,GAAR,KAAgBxB,aAAa,CAACa,sBAAD,EAAyBc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyB;AAChGX,MAAAA,YAAY,EAAES;AADkF,KAAzB,CAAzB,CAAhD;;AAGA,WAAOjB,OAAO,CAACgB,OAAR,GAAkBrB,eAAe,CAACD,UAAD,CAAjC,GAAgDY,sBAAvD;AACD,GA7BD;AA8BD","sourcesContent":["import { createElement, forwardRef as forwardRefReact } from 'react';\nimport { useTranslation } from './useTranslation.js';\nimport { getDisplayName } from './utils.js';\nexport function withTranslation(ns) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t, i18n, ready] = useTranslation(ns, {\n        ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = {\n        ...rest,\n        t,\n        i18n,\n        tReady: ready\n      };\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n      return createElement(WrappedComponent, passDownProps);\n    }\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n    const forwardRef = (props, ref) => createElement(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n    return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;\n  };\n}"]},"metadata":{},"sourceType":"module"}