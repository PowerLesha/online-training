{"ast":null,"code":"import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n\n}\nexport function composeInitialProps(ForComponent) {\n  return ctx => new Promise(resolve => {\n    const i18nInitialProps = getInitialProps();\n\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then(componentsInitialProps => {\n        resolve({ ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nexport function getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}","map":{"version":3,"sources":["C:/Users/HP14EC0101NW/OneDrive/Рабочий стол/clone/Portfolio/node_modules/react-i18next/dist/es/context.js"],"names":["createContext","getDefaults","setDefaults","getI18n","setI18n","initReactI18next","I18nContext","ReportNamespaces","constructor","usedNamespaces","addUsedNamespaces","namespaces","forEach","ns","getUsedNamespaces","Object","keys","composeInitialProps","ForComponent","ctx","Promise","resolve","i18nInitialProps","getInitialProps","then","componentsInitialProps","i18n","reportNamespaces","ret","initialI18nStore","languages","l","getResourceBundle","initialLanguage","language"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASJ,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,gBAArD;AACA,OAAO,MAAMC,WAAW,GAAGN,aAAa,EAAjC;AACP,OAAO,MAAMO,gBAAN,CAAuB;AAC5BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,cAAL,GAAsB,EAAtB;AACD;;AACDC,EAAAA,iBAAiB,CAACC,UAAD,EAAa;AAC5BA,IAAAA,UAAU,CAACC,OAAX,CAAmBC,EAAE,IAAI;AACvB,UAAI,CAAC,KAAKJ,cAAL,CAAoBI,EAApB,CAAL,EAA8B,KAAKJ,cAAL,CAAoBI,EAApB,IAA0B,IAA1B;AAC/B,KAFD;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKP,cAAjB,CAAP;AACD;;AAX2B;AAa9B,OAAO,SAASQ,mBAAT,CAA6BC,YAA7B,EAA2C;AAChD,SAAOC,GAAG,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACnC,UAAMC,gBAAgB,GAAGC,eAAe,EAAxC;;AACA,QAAIL,YAAY,CAACK,eAAjB,EAAkC;AAChCL,MAAAA,YAAY,CAACK,eAAb,CAA6BJ,GAA7B,EAAkCK,IAAlC,CAAuCC,sBAAsB,IAAI;AAC/DJ,QAAAA,OAAO,CAAC,EACN,GAAGI,sBADG;AAEN,aAAGH;AAFG,SAAD,CAAP;AAID,OALD;AAMD,KAPD,MAOO;AACLD,MAAAA,OAAO,CAACC,gBAAD,CAAP;AACD;AACF,GAZa,CAAd;AAaD;AACD,OAAO,SAASC,eAAT,GAA2B;AAChC,QAAMG,IAAI,GAAGvB,OAAO,EAApB;AACA,QAAMQ,UAAU,GAAGe,IAAI,CAACC,gBAAL,GAAwBD,IAAI,CAACC,gBAAL,CAAsBb,iBAAtB,EAAxB,GAAoE,EAAvF;AACA,QAAMc,GAAG,GAAG,EAAZ;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACAH,EAAAA,IAAI,CAACI,SAAL,CAAelB,OAAf,CAAuBmB,CAAC,IAAI;AAC1BF,IAAAA,gBAAgB,CAACE,CAAD,CAAhB,GAAsB,EAAtB;AACApB,IAAAA,UAAU,CAACC,OAAX,CAAmBC,EAAE,IAAI;AACvBgB,MAAAA,gBAAgB,CAACE,CAAD,CAAhB,CAAoBlB,EAApB,IAA0Ba,IAAI,CAACM,iBAAL,CAAuBD,CAAvB,EAA0BlB,EAA1B,KAAiC,EAA3D;AACD,KAFD;AAGD,GALD;AAMAe,EAAAA,GAAG,CAACC,gBAAJ,GAAuBA,gBAAvB;AACAD,EAAAA,GAAG,CAACK,eAAJ,GAAsBP,IAAI,CAACQ,QAA3B;AACA,SAAON,GAAP;AACD","sourcesContent":["import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport function composeInitialProps(ForComponent) {\n  return ctx => new Promise(resolve => {\n    const i18nInitialProps = getInitialProps();\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then(componentsInitialProps => {\n        resolve({\n          ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nexport function getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}"]},"metadata":{},"sourceType":"module"}