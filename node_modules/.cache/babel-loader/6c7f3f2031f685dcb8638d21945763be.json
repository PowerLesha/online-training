{"ast":null,"code":"import { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\n\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\n\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = { ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  }\n\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      }\n    }\n\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getT);\n    }\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = useRef(true);\n  useEffect(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/HP14EC0101NW/OneDrive/Рабочий стол/clone/Portfolio/node_modules/react-i18next/dist/es/useTranslation.js"],"names":["useState","useEffect","useContext","useRef","getI18n","getDefaults","ReportNamespaces","I18nContext","warnOnce","loadNamespaces","loadLanguages","hasLoadedNamespace","usePrevious","value","ignore","ref","current","useTranslation","ns","props","arguments","length","undefined","i18n","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","retNotReady","t","ready","options","react","wait","i18nOptions","useSuspense","keyPrefix","namespaces","addUsedNamespaces","isInitialized","initializedStoreOnce","every","n","getT","getFixedT","lng","nsMode","setT","joinedNS","join","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","on","store","split","forEach","e","off","isInitial","ret","Promise","resolve"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  }\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n    function boundReset() {\n      if (isMounted.current) setT(getT);\n    }\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = useRef(true);\n  useEffect(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}